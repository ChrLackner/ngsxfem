** Linux Build Steps
You require Netgen/NGSolve to run the xfem module. You can either install it before hand 
(default option) or let Netgen/NGSolve be installed as an external dependency. 
#+BEGIN_SRC shell
git clone https://gitlab.asc.tuwien.ac.at/jschoeberl/xfem.git
cd xfem
mkdir build
cd build
#+END_SRC


*** Building xfem with pre-installed NGSolve 
You have Netgen/NGSolve installed? Perfect. Then let INSTLOCATION be the location 
Netgen/NGSolve is already installed to. To install xfem make sure that you have 
write access to that same directory. Then build ngs-xfem with 
#+BEGIN_SRC shell
cmake ../ -DINSTALL_DIR=INSTLOCATION -DBUILD_NGSOLVE=OFF
make
make install
#+END_SRC

*** Building the NGS-Suite and ngs-xfem together 
If you do not have Netgen/NGSolve installed, you may just call
#+BEGIN_SRC shell
cmake ../ -DINSTALL_DIR=INSTLOCATION -DBUILD_NGSOLVE=ON
make
make install
#+END_SRC
For INSTLOCATION you choose a nice installation location of your choice.
Afterwards make sure the installed NGS/xfem-libraries and executable will be found 
by PATH and python.

** Examples
To run the python examples be sure to follow the build steps above.
Then navigate into the =py_tutorials= and run
#+BEGIN_SRC shell
netgen example.py
#+END_SRC
where =example.py= stands for any of the available python files.

** Testing
Tests are enabled by default.
To run the test navigate to the build directory and run =make test=
or =ctest=.
If you need to see specific tests failing use =ctest -V=.
To run individual tests use =ctest -R <regex>=. E.g. =ctest -R h1= to only run h1 integration
tests.

** pde vs. py files
pde-files only still exists for backward compatibility. 
python-files are the new standard.
