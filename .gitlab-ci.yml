build:
  stage: build
  before_script:
    - echo " before script "
    - rm -rf ~/inst/netgen
    - mkdir -p ~/inst/netgen
    - if [ ! -f ~/ngsolve_stable.sif ]; then singularity pull -U library://laevar/default/ngsolve:stable ; mv ngsolve_stable.sif ~/ ; fi
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
  script:
    - singularity exec ~/ngsolve_stable.sif bash .ci/ci_build.sh

ctests-tutorials:
  stage: test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
  script:
    - singularity exec ~/ngsolve_stable.sif bash .ci/ci_ctests.sh tutorial

  when: always
  allow_failure: false

ctests-mayfail:
  stage: test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
  script:
    - singularity exec ~/ngsolve_stable.sif bash .ci/ci_ctests.sh mayfail
  when: always
  allow_failure: true

ctests-remaining:
  stage: test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
  script:
    - singularity exec ~/ngsolve_stable.sif bash .ci/ci_ctests.sh remaining
  when: always
  allow_failure: false

go4quads-tests:
  stage: test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
    - build/
  script:
    - singularity exec ~/ngsolve_stable.sif bash .ci/ci_ctests.sh go4quads-tests
  when: always
  allow_failure: false

ngsxfem-report:
  stage: deploy
  script:
    - singularity exec ~/ngsolve_stable.sif bash .ci/ci_ngsxfem-report.sh
  when: always
  allow_failure: true

deploy:
  stage: deploy
  script:
  - echo " deploy"

cleanup:
  stage: deploy
  script:
    - echo " cleanup "

        jobs:
  paper:
    runs-on: ubuntu-latest
    name: Paper Draft
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build draft PDF
        uses: openjournals/openjournals-draft-action@master
        with:
          journal: joss
          # This should be the path to the paper within your repo.
          paper-path: paper.md
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: paper
          # This is the output path where Pandoc will write the compiled
          # PDF. Note, this should be the same directory as the input
          # paper.md
          path: paper.pdf